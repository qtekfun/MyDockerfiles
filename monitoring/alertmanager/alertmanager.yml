route:

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 10s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  # group_interval: 30s
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 30m

  # A default receiver
  receiver: slack-notifications

  # All the above attributes are inherited by all child routes and can
  # overwritten on each.
  routes:
    - receiver: slack-notifications
      group_wait: 10s
      match_re:
        #severity: critical|warning
        severity: critical
      continue: true    

        #  # A default receiver
        #  receiver: "slack"
        #  receiver: slack-notifications
        #  group_by: ['alertname']
        #  routes:
        #    - match:
        #        alertname: DiskUsageHigh
        #      receiver: slack-notifications

receivers:
  - name: slack-notifications
    slack_configs:
      - send_resolved: true
        title: "{{ .CommonLabels.alertname }}"
        api_url: <api uri webhook>
          # text: "{{ .CommonAnnotations.summary }} \n {{ .Labels.name }}"
        text: "{{ range .Alerts }}<!channel> {{ .Annotations.summary }}\n{{ .Annotations.description }}\n{{ end }}"

